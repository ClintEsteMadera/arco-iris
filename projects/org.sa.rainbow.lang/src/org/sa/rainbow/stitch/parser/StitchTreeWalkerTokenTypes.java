// $ANTLR 2.7.6 (2005-12-22): "parser/stitchT.g" -> "StitchTreeWalker.java"$
package org.sa.rainbow.stitch.parser;

public interface StitchTreeWalkerTokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int MODULE = 4;
	int IMPORT = 5;
	int LIB = 6;
	int MODEL = 7;
	int OP = 8;
	int AS = 9;
	int TACTIC = 10;
	int CONDITION = 11;
	int ACTION = 12;
	int EFFECT = 13;
	int ERROR = 14;
	int STRATEGY = 15;
	int DEFINE = 16;
	int SUCCESS = 17;
	int FAILURE = 18;
	int DEFAULT = 19;
	int NULLTACTIC = 20;
	int DO = 21;
	int DONE = 22;
	int IF = 23;
	int ELSE = 24;
	int FOR = 25;
	int WHILE = 26;
	int TYPE = 27;
	int OBJECT = 28;
	int INT = 29;
	int FLOAT = 30;
	int BOOLEAN = 31;
	int CHAR = 32;
	int STRING = 33;
	int SET = 34;
	int SEQUENCE = 35;
	int RECORD = 36;
	int ENUM = 37;
	int FORALL = 38;
	int EXISTS = 39;
	int UNIQUE = 40;
	int EXISTS_UNIQUE = 41;
	int SELECT = 42;
	int AND = 43;
	int OR = 44;
	int IN = 45;
	int TRUE = 46;
	int FALSE = 47;
	int NULL = 48;
	int UNARY_MINUS = 49;
	int UNARY_PLUS = 50;
	int POST_INCR = 51;
	int POST_DECR = 52;
	int FLOAT_LIT = 53;
	int IDENTIFIER = 54;
	int SL_COMMENT = 55;
	int ML_COMMENT = 56;
	int INTEGER_LIT = 57;
	int STRING_LIT = 58;
	int CHAR_LIT = 59;
	int LPAREN = 60;
	int RPAREN = 61;
	int LBRACKET = 62;
	int RBRACKET = 63;
	int LBRACE = 64;
	int RBRACE = 65;
	int COLON = 66;
	int SEMICOLON = 67;
	int COMMA = 68;
	int DOT = 69;
	int DQUOTE = 70;
	int SQUOTE = 71;
	int BSLASH = 72;
	int BAR = 73;
	int HASH = 74;
	int AT = 75;
	int DOLLAR = 76;
	int ASSIGN = 77;
	int PLUS_ASSIGN = 78;
	int MINUS_ASSIGN = 79;
	int STAR_ASSIGN = 80;
	int DIV_ASSIGN = 81;
	int MOD_ASSIGN = 82;
	int COLON_BANG = 83;
	int LOGICAL_OR = 84;
	int LOGICAL_AND = 85;
	int EQ = 86;
	int NE = 87;
	int LT = 88;
	int LE = 89;
	int GE = 90;
	int GT = 91;
	int PLUS = 92;
	int MINUS = 93;
	int STAR = 94;
	int SLASH = 95;
	int MOD = 96;
	int INCR = 97;
	int DECR = 98;
	int LOGICAL_NOT = 99;
	int IMPLIES = 100;
	int IFF = 101;
	int LETTER = 102;
	int DIGIT = 103;
	int UNDERSCORE = 104;
	int NL = 105;
	int WS = 106;
	int IMPORTS = 107;
	int IMPORT_LIB = 108;
	int IMPORT_MODEL = 109;
	int IMPORT_OP = 110;
	int TACTICS = 111;
	int FUNC_LIST = 112;
	int VAR_LIST = 113;
	int STRATEGIES = 114;
	int STRATEGY_COND = 115;
	int STRATEGY_BRANCH = 116;
	int DO_UNSPEC = 117;
	int STMT_LIST = 118;
	int EMPTY_STMT = 119;
	int VAR_DEF = 120;
	int EXPR_LIST = 121;
	int EXPR = 122;
	int METHOD_CALL = 123;
	int FOR_INIT = 124;
	int FOR_COND = 125;
	int FOR_ITER = 126;
	int FOR_EACH = 127;
	int PARAM_LIST = 128;
	int PARAM = 129;
}
